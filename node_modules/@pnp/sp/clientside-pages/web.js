import { __awaiter, __generator } from "tslib";
import { _Web } from "../webs/types.js";
import { CreateClientsidePage, ClientsidePageFromFile } from "./types.js";
import { SharePointQueryableInstance, SharePointQueryableCollection } from "../sharepointqueryable.js";
import { extractWebUrl } from "../utils/extractweburl.js";
import { spPost } from "../operations.js";
import { body } from "@pnp/odata";
import { metadata } from "../utils/metadata.js";
import { assign } from "@pnp/common";
_Web.prototype.getClientsideWebParts = function () {
    return this.clone(SharePointQueryableCollection, "GetClientSideWebParts")();
};
_Web.prototype.addClientsidePage =
    function (pageName, title, layout, promotedState) {
        if (title === void 0) { title = pageName.replace(/\.[^/.]+$/, ""); }
        return CreateClientsidePage(this, pageName, title, layout, promotedState);
    };
_Web.prototype.loadClientsidePage = function (path) {
    return ClientsidePageFromFile(this.getFileByServerRelativePath(path));
};
_Web.prototype.addRepostPage = function (details) {
    return __awaiter(this, void 0, void 0, function () {
        var query, r;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    query = SharePointQueryableInstance(extractWebUrl(this.toUrl()), "_api/sitepages/pages/reposts").configureFrom(this);
                    return [4 /*yield*/, spPost(query, body(assign(metadata("SP.Publishing.RepostPage"), details)))];
                case 1:
                    r = _a.sent();
                    return [2 /*return*/, r.AbsoluteUrl];
            }
        });
    });
};
//# sourceMappingURL=web.js.map